# -*- coding: utf-8 -*-

# Создать пакет, в который скопировать функции отрисовки из предыдущего урока
#  - радуги
#  - стены
#  - дерева
#  - смайлика
#  - снежинок
# Функции по модулям разместить по тематике. Название пакета и модулей - по смыслу.
# Создать модуль с функцией отрисовки кирпичного дома с широким окном и крышей.

# С помощью созданного пакета нарисовать эпохальное полотно "Утро в деревне".
# На картине должны быть:
#  - кирпичный дом, в окошке - смайлик.
#  - слева от дома - сугроб (предположим что это ранняя весна)
#  - справа от дома - дерево (можно несколько)
#  - справа в небе - радуга, слева - солнце (весна же!)
# пример см. lesson_005/results/04_painting.jpg
# Приправить своей фантазией по вкусу (коты? коровы? люди? трактор? что придумается)

import simple_draw as sd
from drawing_epic_painting.drawing_house.draw_house import draw_house
from drawing_epic_painting.draw_tree import draw_tree
from drawing_epic_painting.draw_snowfall import draw_snowfall
from drawing_epic_painting.draw_rainbow import draw_rainbow
from drawing_epic_painting.draw_cloud import draw_cloud
from drawing_epic_painting.draw_sun import draw_sun

# Небо
sd.resolution = (1200, 800)
sd.background_color = (135, 206, 235)
# Трава
sd.circle(center_position=sd.get_point(600, -3850), radius=4000, color=sd.COLOR_GREEN, width=0)
sd.start_drawing()
draw_house(point_x=500, point_y=100, length=300, height=200)
draw_rainbow(center_x=1400, center_y=1000, radius=400)
draw_sun(center_x=650, center_y=700)
draw_cloud(center_x=200, center_y=700)
draw_tree(start_point=sd.get_point(1000, 50), angle=90, length=100, width=10)

# TODO: draw_snowfall не завершится. Поэтому вызовы после нее не будут вызваны.
draw_snowfall()
sd.finish_drawing()
sd.pause()



# Усложненное задание (делать по желанию)
# Анимировать картину.
# Пусть слева идет снегопад, радуга переливается цветами, смайлик моргает, солнце крутит лучами, етс.
# Задержку в анимировании все равно надо ставить, пусть даже 0.01 сек - так библиотека устойчивей работает.
# TODO:
#   Как быть с вечным циклом? Сейчас у нас есть снегопад (вечный цикл внутри).
#   Внутри вечного цикла выполняется отрисовка 1 кадра. 1 кадр == 1 итерация. Например для снежинок - это
#   закраска цветом фона, сдвиг на 10 пикселей вниз, отрисовка снежинок цветом снега. И эти изменения отличают один кадр
#   от другого. У анимации радуги, солнца и смайлика тоже есть свои итерации.
#   .
#   Наша задача сделать вечный цикл здесь, в этом файле, и вызывать функции "выполнить 1 итерацию снегопада",
#   "выполнить 1 итерацию радуги" и др. из этого цикла. Таким образом за 1 итерацию вечного цикла из этого файла, каждый
#   элемент картинки чуть-чуть изменится: радуга сменит цвет 1 раз, снежинки упадут на 10 пикселей, солнце сдвинется
#   на небольшой угол.
global_counter = 0
point_rainbow = sd.get_point(0, 0)
while True:
    # снежок (одна итерация снегопада)
    # ...

    # радуга (прокручиваем цвета)
    draw_rainbow(point_rainbow, color_offset=global_counter % 7)

    # солнышко (крутим лучами н 5 градусов)
    # ...

    # ...

    # счетчики анимации (увеличиваем угол солнца; следующий цвет в радуге; глаз смайлика)
    global_counter += 1
    # ...
    pass




# TODO: Пусть функция отрисовки радуги отрисует ее начиная с указанного в параметре цвета.
#  Мы добавим параметр "color_offset", который будет определяеть, начиная с какого цвета рисовать радугу.
#  Допустим color_offset=0, тогда радуга: красный, оранжевый, желает, ..., феолетовый;
#           color_offset=1, тогда радуга: оранжевый, желтый,..., феолетовый, красный (циклический сдвиг на 1 цвет);
#           color_offset=2, тогда радуга: желтый, ..., феолетовый, красный, оранжевый (циклический сдвиг на 1 цвет);
#  .
#  Нам нужно, чтобы был метод draw_rainbow(), который рисует всю радугу. Целиком. Чтобы метод принимал следующие
#  параметры:
#   1. point - где рисовать радугу;
#   2. radius - радиус минимального кольца цвета;
#   3. color_offset - начиная с какого цвета рисовать радугу.
#  .
#  Пример вызова метода:
#       draw_rainbow(point=sd.get_point(100, 500), radius=50, color_offset=0)   # красный,оранжевый,...,феолетовый;
#       draw_rainbow(point=sd.get_point(100, 500), radius=50, color_offset=1)   # оранжевый,..., феолетовый, красный
#       draw_rainbow(point=sd.get_point(100, 500), radius=50, color_offset=6)   # феолетовый, красный, оранжевый,...
